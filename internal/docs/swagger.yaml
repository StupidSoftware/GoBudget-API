basePath: /api/v1
definitions:
  model.Category:
    properties:
      id:
        type: string
      name:
        maxLength: 46
        minLength: 3
        type: string
      user_id:
        type: string
    required:
    - name
    type: object
  model.User:
    properties:
      balance:
        type: integer
      created_at:
        type: string
      id:
        type: string
      password:
        type: string
      username:
        maxLength: 20
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  utils.CustomError:
    properties:
      code:
        type: integer
      error: {}
      message:
        type: string
    type: object
host: localhost:3333
info:
  contact:
    email: brenosantos@breno5g.dev
    name: Breno Santos
  description: API for GoBudget
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: GoBudget API
  version: "1.0"
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: Get all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.CustomError'
      security:
      - BearerAuth: []
      summary: Get all categories
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/model.Category'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.CustomError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.CustomError'
      security:
      - BearerAuth: []
      summary: Create a new category
      tags:
      - Category
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.CustomError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.CustomError'
      summary: Create a new user
      tags:
      - User
  /users/login:
    get:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.CustomError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.CustomError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.CustomError'
      summary: Login
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
